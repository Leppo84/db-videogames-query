SELECT

1- Selezionare tutte le software house americane (3)
select * from software_houses
where country = "United States"

2- Selezionare tutti i giocatori della città di 'Rogahnland' (2)
select * from players p
where city = "Rogahnland"

3- Selezionare tutti i giocatori il cui nome finisce per "a" (220)
select * from players p
where name like "%a"

4- Selezionare tutte le recensioni scritte dal giocatore con ID = 800 (11)
select * from reviews
where player_id = 800

5- Contare quanti tornei ci sono stati nell'anno 2015 (9)
select * from tournaments t
where year = 2015

6- Selezionare tutti i premi che contengono nella descrizione la parola 'facere' (2)
select * from awards a
where description like "%facere%"

7- Selezionare tutti i videogame che hanno la categoria 2 (FPS) o 6 (RPG), mostrandoli una sola volta (del videogioco vogliamo solo l'ID) (287)
select distinct videogame_id from category_videogame cv 
where category_id = 2 or category_id = 6

8- Selezionare tutte le recensioni con voto compreso tra 2 e 4 (2947)
select id from reviews r
where rating between 2 and 4

9- Selezionare tutti i dati dei videogiochi rilasciati nell'anno 2020 (46)
select id, name, overview, release_date, software_house_id from videogames v
where release_date between "2020-01-01" and "2020-12-31"

10- Selezionare gli id dei videogame che hanno ricevuto almeno una recensione da stelle, mostrandoli una sola volta (443) 
select distinct videogame_id from reviews r 
where rating = 5

*********** BONUS ***********

11- Selezionare il numero e la media delle recensioni per il videogioco con ID = 412 (review number = 12, avg_rating = 3.16 circa)
select count(r.rating),  avg(rating) from reviews r 
where r.videogame_id = 412

12- Selezionare il numero di videogame che la software house con ID = 1 ha rilasciato nel 2018 (13)
select count(v.id) from videogames v
where v.software_house_id = 1 and release_date between "2018-01-01" and "2018-12-31"


------------------------------------------------------------------------------------------------------------------------------------------------------------

GROUP BY

1- Contare quante software house ci sono per ogni paese (3)
select country from software_houses sh 
group by country

2- Contare quante recensioni ha ricevuto ogni videogioco (del videogioco vogliamo solo l'ID) (500)
select count(id) from reviews r
group by videogame_id 

3- Contare quanti videogiochi hanno ciascuna classificazione PEGI (della classificazione PEGI vogliamo solo l'ID) (13)
select count(videogame_id) from pegi_label_videogame plv
group by pegi_label_id

4- Mostrare il numero di videogiochi rilasciati ogni anno (11)
select Count(id) from videogames
group by year(release_date)

5- Contare quanti videogiochi sono disponbiili per ciascun device (del device vogliamo solo l'ID) (7)
select Count(id) from device_videogame dv
group by device_id

6- Ordinare i videogame in base alla media delle recensioni (del videogioco vogliamo solo l'ID) (500)
select avg(rating), videogame_id from reviews r
group by videogame_id
order by avg(rating)

------------------------------------------------------------------------------------------------------------------------------------------------------------

JOIN

1- Selezionare i dati di tutti giocatori che hanno scritto almeno una recensione, mostrandoli una sola volta (996)
select distinct player_id  from reviews
join players p on player_id

2- Sezionare tutti i videogame dei tornei tenuti nel 2016, mostrandoli una sola volta (226)
select distinct videogame_id, v.name  from tournament_videogame tv
join tournaments t on t.id = tv.tournament_id 
join videogames v on v.id = tv.videogame_id
where t.year = 2016

3- Mostrare le categorie di ogni videogioco (1718)
select videogame_id, v.name, c.name  from category_videogame cv
join videogames v  on cv.videogame_id = v.id
join categories c on cv.category_id = c.id

4- Selezionare i dati di tutte le software house che hanno rilasciato almeno un gioco dopo il 2020, mostrandoli una sola volta (6)
select distinct sh.name  from videogames v
join software_houses sh on v.software_house_id  = sh.id 
where release_date > "2020-01-01"

5- Selezionare i premi ricevuti da ogni software house per i videogiochi che ha prodotto (55)
select av.id, a.name, v.name, sh.name  from award_videogame av
join awards a  on av.award_id = a.id  
join videogames v on av.videogame_id = v.id
join software_houses sh  on v.software_house_id = sh.id

6- Selezionare categorie e classificazioni PEGI dei videogiochi che hanno ricevuto recensioni da 4 e 5 stelle, mostrandole una sola volta (3363)
select distinct c.name, v.name, pl.name from reviews r 
join videogames v  on v.id = r.videogame_id 
join pegi_label_videogame plv  on plv.videogame_id = v.id
join pegi_labels pl on pl.id = plv.pegi_label_id 
join category_videogame cv on cv.videogame_id = v.id 
join categories c on c.id = cv.category_id  
where rating > 3

7- Selezionare quali giochi erano presenti nei tornei nei quali hanno partecipato i giocatori il cui nome inizia per 'S' (474)
select distinct v.name from videogames v  
join tournament_videogame tv  on v.id = tv.videogame_id
join tournaments t  on tv.tournament_id = t.id
join player_tournament pt on t.id = pt.tournament_id
join players p on pt.player_id = p.id
where p.name like "s%"

8- Selezionare le città in cui è stato giocato il gioco dell'anno del 2018 (36)
select t.city from tournaments t  
join tournament_videogame tv  on t.id  = tv.tournament_id
join videogames v on v.id = tv.videogame_id
join award_videogame av on v.id = av.videogame_id 
join awards a on a.id = av.award_id 
where a.name = "Gioco dell'anno" and av.year = 2018

9- Selezionare i giocatori che hanno giocato al gioco più atteso del 2018 in un torneo del 2019 (3306)
select p.name, p.lastname from players p
join player_tournament pt on pt.player_id = p.id
join tournaments t on t.id = pt.tournament_id 
join tournament_videogame tv  on t.id  = tv.tournament_id
join videogames v on v.id = tv.videogame_id
join award_videogame av on v.id = av.videogame_id 
join awards a on a.id = av.award_id 
where a.name = "Gioco più atteso" and av.year = 2018 and t.year = 2019

*********** BONUS ***********

10- Selezionare i dati della prima software house che ha rilasciato un gioco, assieme ai dati del gioco stesso (software house id : 5)
select v.release_date, sh.id from videogames v
join software_houses sh  on sh.id = v.software_house_id 
order by v.release_date
limit 1

11- Selezionare i dati del videogame (id, name, release_date, totale recensioni) con più recensioni (videogame id : potrebbe uscire 449 o 398, sono entrambi a 20)
select r.videogame_id , v.name, v.release_date , count(rating) from reviews r
join videogames v on r.videogame_id = v.id 
group by videogame_id 
order by count(rating) desc 
limit 1

12- Selezionare la software house che ha vinto più premi tra il 2015 e il 2016 (software house id : potrebbe uscire 3 o 1, sono entrambi a 3)
select sh.id, count(sh.id), sh.name from software_houses sh
join videogames v  on v.software_house_id = sh.id  
join award_videogame av on av.videogame_id = v.id
join awards a on a.id = av.award_id 
where av.year between 2015 and 2016
group by v.software_house_id 
order by count(sh.id) desc 
limit 1

13- Selezionare le categorie dei videogame i quali hanno una media recensioni inferiore a 1.5 (10)
